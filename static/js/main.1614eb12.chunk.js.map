{"version":3,"sources":["components/TheDotMatrix/Shape/index.js","components/TheDotMatrix/Board/index.js","components/TheDotMatrix/ColorPicker/index.js","components/TheDotMatrix/Controls/index.js","components/TheDotMatrix/index.js","components/TheNumericalSlider/index.js","components/TheTextParser/index.js","components/TheProgram/index.js","components/Tasks/index.js","App.js","serviceWorker.js","index.js"],"names":["Shape","props","className","style","backgroundColor","color","width","radius","height","patterns","getShapeColor","row","col","type","color1","color2","Board","gridTemplateColumns","cols","boardColor","rows","shape","i","j","push","key","drawShape","pattern","shapeColor1","shapeColor2","ColorPicker","state","displayColorPicker","r","g","b","a","hex","value","handleClick","setState","handleClose","handleChange","onChange","target","name","styles","reactCSS","borderRadius","this","swatch","background","boxShadow","cursor","popover","position","zIndex","cover","top","right","bottom","left","onClick","React","Component","useStyles","makeStyles","theme","root","flexGrow","formControl","margin","spacing","minWidth","paper","padding","palette","text","secondary","Controls","classes","useState","data","e","console","log","Grid","container","direction","justify","item","xs","display","alignItems","Paper","elevation","Typography","variant","component","Divider","FormControl","TextField","required","id","label","InputLabel","htmlFor","Select","labelId","inputProps","MenuProps","getContentAnchorEl","anchorOrigin","vertical","horizontal","map","MenuItem","textAlign","TheDotMatrix","lg","sm","md","maxWidth","maxHeight","overflow","TheNumericalSlider","fontSize","ReactSlider","min","max","thumbClassName","trackClassName","renderThumb","valueNow","card","media","TheTextParser","input","isValidURL","url","RegExp","test","isImageURL","match","multiline","fullWidth","readOnly","disabled","href","Card","CardMedia","src","title","TheProgram","output","content","language","string","split","length","temp","join","program","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","Tasks","useTheme","setValue","AppBar","Tabs","event","newValue","indicatorColor","textColor","aria-label","Tab","axis","onChangeIndex","dir","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1614eb12.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\n\nfunction Shape(props) {\n  return (\n    <div className={props.className}>\n      <span className=\"dot\" style={{backgroundColor: props.color, width: props.radius * 2, height: props.radius * 2}}></span>\n    </div>\n  );\n}\n\nexport default Shape;","import React from 'react';\nimport Shape from '../Shape';\nimport './index.scss';\n\nconst patterns = {\n  'grid': 1,\n  'checker': 2,\n  'odd': 3,\n};\n\nfunction Board(props) {\n  return (\n    <div className=\"grid-container\"\n      style={\n        {\n          width: `${props.width}px`,\n          height: `${props.height}px`,\n          gridTemplateColumns: `repeat(${props.cols}, auto)`,\n          backgroundColor: props.boardColor,\n        }\n      }>\n      {drawShape(props.rows, props.cols, props.pattern, props.shapeColor1, props.shapeColor2, props.radius)}\n    </div>\n  );\n}\n\nfunction drawShape(rows, cols, type, color1, color2, radius) {\n  let shape = [];\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      shape.push(<Shape className=\"grid-item\" key={`${i}.${j}`} color={getShapeColor(i, j, type, color1, color2)} radius={radius}></Shape>);\n    }\n  }\n\n  return shape;\n}\n\nfunction getShapeColor(row, col, type, color1, color2) {\n  return (row + col) % patterns[type] ? color2 : color1;\n}\n\nexport default Board;","import React from 'react';\nimport reactCSS from 'reactcss';\nimport { SketchPicker } from 'react-color';\n\nclass ColorPicker extends React.Component {\n  state = {\n    displayColorPicker: false,\n    color: {\n      r: '241',\n      g: '112',\n      b: '19',\n      a: '1',\n    },\n    hex: this.props.value,\n  };\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\n  };\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false })\n  };\n\n  handleChange = (color) => {\n    this.setState({...color})\n    this.props.onChange({ target: { name: this.props.name, value: color.hex } })\n  };\n\n  render() {\n\n    const styles = reactCSS({\n      'default': {\n        color: {\n          width: '100%',\n          height: '14px',\n          borderRadius: '2px',\n          backgroundColor: `${this.state.hex}`,\n        },\n        swatch: {\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          cursor: 'pointer',\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2',\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px',\n        },\n      },\n    });\n\n    return (\n      <div>\n        <div style={styles.swatch} onClick={this.handleClick}>\n          <div style={styles.color} />\n        </div>\n        {this.state.displayColorPicker ? <div style={styles.popover}>\n          <div style={styles.cover} onClick={this.handleClose} />\n          <SketchPicker color={this.state.color} onChange={this.handleChange} />\n        </div> : null}\n\n      </div>\n    )\n  }\n}\n\nexport default ColorPicker","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, InputLabel, Select, MenuItem, TextField, Grid, Paper, Typography, Divider } from '@material-ui/core';\nimport ColorPicker from '../ColorPicker';\nimport './index.scss';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    // textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction Controls(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    ...props.data,\n  });\n\n  const patterns = [\n    'grid',\n    'checker',\n    'odd',\n  ];\n\n  const handleChange = (e) => {\n    console.log(e.target.name, e.target.value);\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n    props.onChange(e);\n  };\n\n  return (\n    <div>\n      <Grid container spacing={1} direction=\"row\" justify=\"center\">\n        <Grid item xs={6} style={{ display: 'flex', alignItems: 'stretch' }}>\n          <Paper className={classes.paper} elevation={3}>\n            <Typography variant=\"h4\" component=\"h4\">Board</Typography>\n            <Divider></Divider>\n            <FormControl className={classes.formControl}>\n              <TextField\n                value={state.width}\n                onChange={handleChange}\n                required\n                type=\"number\"\n                id=\"width\"\n                label=\"Width\"\n                name=\"width\"\n              />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <TextField\n                value={state.height}\n                onChange={handleChange}\n                required\n                type=\"number\"\n                id=\"height\"\n                label=\"Height\"\n                name=\"height\"\n              />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <TextField\n                value={state.cols}\n                onChange={handleChange}\n                required\n                type=\"number\"\n                id=\"cols\"\n                label=\"Columns\"\n                name=\"cols\"\n              />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <TextField\n                value={state.rows}\n                onChange={handleChange}\n                required\n                type=\"number\"\n                id=\"rows\"\n                label=\"Rows\"\n                name=\"rows\"\n              />\n            </FormControl>\n            <FormControl required className={classes.formControl}>\n              <InputLabel htmlFor=\"pattern\" id=\"pattern\">Pattern</InputLabel>\n              <Select\n                labelId=\"pattern\"\n                value={state.pattern}\n                onChange={handleChange}\n                inputProps={{\n                  name: 'pattern',\n                  label: 'Pattern',\n                  id: 'pattern',\n                }}\n                MenuProps={{\n                  getContentAnchorEl: null,\n                  anchorOrigin: {\n                    vertical: \"bottom\",\n                    horizontal: \"left\"\n                  }\n                }}\n              >{patterns.map(pattern => <MenuItem key={pattern} value={pattern}>{pattern}</MenuItem>)}\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <ColorPicker labelId=\"boardColor\" name=\"boardColor\" value={state.boardColor} onChange={handleChange} id=\"boardColor\"></ColorPicker>\n            </FormControl>\n          </Paper>\n        </Grid>\n        <Grid item xs={6} style={{ display: 'flex', alignItems: 'stretch' }}>\n          <Paper className={classes.paper} elevation={3}>\n            <Typography variant=\"h4\" component=\"h4\" alignItems=\"auto\">Shape</Typography>\n            <Divider></Divider>\n            <FormControl className={classes.formControl}>\n              <TextField\n                value={state.radius}\n                onChange={handleChange}\n                required\n                type=\"number\"\n                id=\"radius\"\n                label=\"Radius\"\n                name=\"radius\"\n              />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <ColorPicker name=\"shapeColor1\" value={state.shapeColor1} onChange={handleChange} id=\"shapeColor1\"></ColorPicker>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <ColorPicker name=\"shapeColor2\" value={state.shapeColor2} onChange={handleChange} id=\"shapeColor2\"></ColorPicker>\n            </FormControl>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Controls;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper } from '@material-ui/core';\nimport Board from './Board';\nimport Controls from './Controls';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction TheDotMatrix() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    width: 200,\n    height: 200,\n    rows: 4,\n    cols: 5,\n    radius: 12.5,\n    pattern: 'grid',\n    boardColor: 'red',\n    shapeColor1: 'black',\n    shapeColor2: 'white'\n  });\n\n  const handleChange = (e) => {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n\n  return (\n    <Grid container spacing={1} direction=\"row\" justify=\"center\" alignItems=\"center\">\n      <Grid item lg={3} sm={5} md={4} xs={12}>\n        <Paper className={classes.paper} elevation=\"0\">\n          <Controls onChange={handleChange} data={state}></Controls>\n        </Paper>\n      </Grid>\n      <Grid item lg={9} sm={7} md={8} xs={12} style={{\n        maxWidth: '100%',\n        maxHeight: '100%',\n        overflow: 'scroll'\n      }}>\n        <Paper className={classes.paper} elevation=\"0\">\n          <Board {...state}></Board>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default TheDotMatrix;\n","import React from 'react';\nimport ReactSlider from 'react-slider';\nimport './index.css';\n\nfunction TheNumericalSlider() {\n  return (\n    <div className=\"slider-container\">\n      <span style={{fontSize: '1.2em'}}>25</span>\n      <ReactSlider\n        min=\"25\"\n        max=\"120\"\n        className=\"horizontal-slider\"\n        thumbClassName=\"slider-thumb\"\n        trackClassName=\"slider-track\"\n        renderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n      />\n      <span style={{fontSize: '1.2em'}}>120</span>\n    </div>\n  )\n}\n\nexport default TheNumericalSlider;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, TextField, Card, CardMedia } from '@material-ui/core';\nimport './index.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  card: {\n    maxWidth: 345,\n  },\n  media: {\n    height: '100%',\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction TheTextParser() {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    input: '',\n  });\n\n  const handleChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const isValidURL = (url) => {\n    var pattern = new RegExp('^(https?:\\\\/\\\\/)' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\n    return !!pattern.test(url);\n  };\n\n  const isImageURL = (url) => {\n    return (url.match(/\\.(jpeg|jpg|gif|png)$/) != null);\n  };\n\n  return (\n    <div>\n      <Grid container spacing={1} direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item lg={6} sm={6} md={6} xs={12}>\n          <Paper className={classes.paper} elevation=\"0\">\n            <TextField\n              id=\"outlined-multiline-static\"\n              label=\"Input\"\n              multiline\n              fullWidth\n              rows={20}\n              variant=\"outlined\"\n              name=\"input\"\n              onChange={handleChange}\n            />\n          </Paper>\n        </Grid>\n        <Grid item lg={6} sm={6} md={6} xs={12}>\n          <Paper className={classes.paper} elevation=\"0\">\n            {!isValidURL(state.input) && !isImageURL(state.input) && <TextField\n              id=\"outlined-multiline-static\"\n              label=\"Output\"\n              multiline\n              inputProps={{\n                readOnly: true,\n                disabled: true\n              }}\n              fullWidth\n              rows={20}\n              value={state.input}\n              variant=\"outlined\"\n            />}\n            {isValidURL(state.input) && !isImageURL(state.input) && <a href={state.input}>{state.input}</a>}\n            {isValidURL(state.input) && isImageURL(state.input) && <Card className={classes.root}>\n              <CardMedia\n                className={classes.media}\n                component=\"img\"\n                height=\"140\"\n                src={state.input}\n                title=\"Image\"\n              />\n            </Card>}\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default TheTextParser;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, TextField } from '@material-ui/core';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport './index.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst getContent = () => {\n  return `\n    function reverse(a) {\n      let string = input.split('');\n      let i = 0;\n      let j = string.length - 1;\n      while (i < j) {\n        if (!/[a-zA-Z]/.test(string[i])) {\n          ++i; continue;\n        }\n        if (!/[a-zA-Z]/.test(string[j])) {\n          --j; continue;\n        }\n        let temp = string[i];\n        string[i] = string[j];\n        string[j] = temp;\n        ++i; --j;\n      }\n    \n      return string.join('');\n    }\n  `;\n};\n\nconst program = (input) => {\n  let string = input.split('');\n  let i = 0;\n  let j = string.length - 1;\n  while (i < j) {\n    if (!/[a-zA-Z]/.test(string[i])) {\n      ++i; continue;\n    }\n    if (!/[a-zA-Z]/.test(string[j])) {\n      --j; continue;\n    }\n    let temp = string[i];\n    string[i] = string[j];\n    string[j] = temp;\n    ++i; --j;\n  }\n\n  return string.join('');\n};\n\nfunction TheProgram() {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    input: '',\n    output: '',\n    content: getContent(),\n  });\n\n  const handleChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value, output: program(e.target.value) });\n  };\n\n  return (\n    <Grid container spacing={1} direction=\"row\" justify=\"center\">\n      <Grid item lg={8} sm={8} md={8} xs={12}>\n        <SyntaxHighlighter language=\"javascript\">\n          {state.content}\n        </SyntaxHighlighter>\n      </Grid>\n      <Grid item lg={4} sm={4} md={4} xs={12}>\n        <Grid item lg={12} sm={12} md={12} xs={12}>\n          <Paper className={classes.paper} elevation=\"0\">\n            <TextField\n              id=\"outlined-multiline-static\"\n              label=\"Input\"\n              multiline\n              fullWidth\n              rows={1}\n              variant=\"outlined\"\n              name=\"input\"\n              onChange={handleChange}\n            />\n          </Paper>\n        </Grid>\n        <Grid item lg={12} sm={12} md={12} xs={12}>\n          <Paper className={classes.paper} elevation=\"0\">\n            <TextField\n              id=\"outlined-multiline-static\"\n              label=\"Output\"\n              multiline\n              inputProps={{\n                readOnly: true,\n                disabled: true\n              }}\n              fullWidth\n              rows={1}\n              value={state.output}\n              variant=\"outlined\"\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default TheProgram;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport TheDotMatrix from '../TheDotMatrix';\nimport TheNumericalSlider from '../TheNumericalSlider';\nimport TheTextParser from '../TheTextParser';\nimport TheProgram from '../TheProgram';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: '100%',\n  },\n}));\n\nexport default function Tasks() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"The dot matrix\" {...a11yProps(0)} />\n          <Tab label=\"The numerical slider\" {...a11yProps(1)} />\n          <Tab label=\"The Text parser\" {...a11yProps(2)} />\n          <Tab label=\"The Program\" {...a11yProps(3)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          <TheDotMatrix></TheDotMatrix>\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <TheNumericalSlider></TheNumericalSlider>\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n          <TheTextParser></TheTextParser>\n        </TabPanel>\n        <TabPanel value={value} index={3} dir={theme.direction}>\n          <TheProgram></TheProgram>\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n}\n","import React from 'react';\nimport Tasks from './components/Tasks';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Tasks></Tasks>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}